{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","diplay","title","display","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","style","fontFamily","fontWeight","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e9df958.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nfunction Cards({ data: { confirmed, recovered, deaths, lastUpdate } }) {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify='center'>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color='textSecondary' gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp start={0} end={confirmed.value} separator=',' />\n            </Typography>\n            <Typography color='textSecondary'>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant='body2'>Number of active cases</Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color='textSecondary' gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp start={0} end={recovered.value} separator=',' />\n            </Typography>\n            <Typography color='textSecondary'>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant='body2'>Number of recovered cases</Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color='textSecondary' gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant='h5'>\n              <CountUp start={0} end={deaths.value} separator=',' />\n            </Typography>\n            <Typography color='textSecondary'>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant='body2'>Number of Deaths </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const { data } = await axios.get(changeableUrl);\n    const modifiedData = {\n      confirmed: data.confirmed,\n      recovered: data.recovered,\n      deaths: data.deaths,\n      lastUpdate: data.lastUpdate,\n    };\n\n    return modifiedData;\n  } catch (error) {}\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {}\n};\n\nexport const countries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {}\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nfunction Chart({ data, country }) {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart =\n    dailyData.length !== 0 ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [\n            {\n              data: dailyData.map(({ confirmed }) => confirmed),\n              label: 'Infected',\n              borderColor: '#3333ff',\n              fill: true,\n            },\n            {\n              data: dailyData.map(({ deaths }) => deaths),\n              label: 'Deaths',\n              borderColor: 'red',\n              fill: true,\n              backgroundColor: 'rgba(255,0,0,0.5)',\n            },\n          ],\n        }}\n      />\n    ) : null;\n\n  const barChart = data.confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: [\n              'rgba(0,0,255,0.5)',\n              'rgba(0,255,0,0.5)',\n              'rgba(255,0,0,0.5)',\n            ],\n            data: [\n              data.confirmed.value,\n              data.recovered.value,\n              data.deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { diplay: false },\n        title: { display: true, text: `Situation in ${country}` },\n      }}\n    />\n  ) : null;\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { countries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nfunction CountryPicker({ handleCountryChange }) {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      setFetchedCountries(await countries());\n    };\n    fetchCountries();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=''\n        onChange={(e) => {\n          handleCountryChange(e.target.value);\n        }}\n      >\n        <option value=''>Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n}\n\nexport default CountryPicker;\n","import React, { Component } from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nclass App extends Component {\n  state = {\n    data: {},\n    country: '',\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <div\n          style={{\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            fontWeight: 'bold',\n          }}\n        >\n          COVID-19 GLOBAL TRACKER\n        </div>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}